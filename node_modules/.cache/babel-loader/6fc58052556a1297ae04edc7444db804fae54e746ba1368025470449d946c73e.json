{"ast":null,"code":"var _jsxFileName = \"/home/waltubuntu/Desktop/Repos/React/task-tracker/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(true);\n  const [tasksArray, setTasksArray] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const getTaskData = await fetchRequest();\n      setTasksArray(getTaskData);\n    };\n    getTasks();\n  }, []);\n  const fetchRequest = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  //deleteTask\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    setTasksArray(tasksArray.filter(task => task.id !== id));\n  };\n\n  //Add tasks\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasksArray([...tasksArray, data]);\n\n    // const data = await res.json()\n\n    //   const id = Math.floor(Math.random() * 1000 + 1);\n    //   const newTask = { id, ...task };\n    //   setTasksArray([...tasksArray, newTask]);\n  };\n  //fetch Task\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  //set Reminder\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasksArray(tasksArray.map(task => task.id === id ? {\n      ...task,\n      reminder: data.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), tasksArray.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasksArr: tasksArray,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : \"No Task Available\", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nLHfRF90UX0H9VjhsvsFt5hlJGo=\");\n_c = App;\nexport default App;\n\n//trying to console log reminder\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","useState","useEffect","Header","Tasks","Footer","About","AddTask","App","showAddTask","setShowAddTask","tasksArray","setTasksArray","getTasks","getTaskData","fetchRequest","res","fetch","data","json","console","log","deleteTask","id","method","filter","task","addTask","headers","body","JSON","stringify","fetchTask","toggleReminder","taskToToggle","updTask","reminder","map","length"],"sources":["/home/waltubuntu/Desktop/Repos/React/task-tracker/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header.js\";\nimport Tasks from \"./components/Tasks\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(true);\n  const [tasksArray, setTasksArray] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const getTaskData = await fetchRequest();\n      setTasksArray(getTaskData);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchRequest = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  //deleteTask\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasksArray(tasksArray.filter((task) => task.id !== id));\n  };\n\n  //Add tasks\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasksArray([...tasksArray, data]);\n\n    // const data = await res.json()\n\n    //   const id = Math.floor(Math.random() * 1000 + 1);\n    //   const newTask = { id, ...task };\n    //   setTasksArray([...tasksArray, newTask]);\n  };\n  //fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  //set Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasksArray(\n      tasksArray.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        {showAddTask && <AddTask onAdd={addTask} />}\n\n        {tasksArray.length > 0 ? (\n          <Tasks\n            tasksArr={tasksArray}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          />\n        ) : (\n          \"No Task Available\"\n        )}\n\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n//trying to console log reminder\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}